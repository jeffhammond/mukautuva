double (*MUK_Wtime)(void);
double (*MUK_Wtick)(void);

int (*MUK_Init)(int *argc, char ***argv);
int (*MUK_Init_thread)(int *argc, char ***argv, int required, int *provided);
int (*MUK_Initialized)(int *flag);

int (*MUK_Get_library_version)(char *version, int *resultlen);
int (*MUK_Get_processor_name)(char *name, int *resultlen);
int (*MUK_Get_version)(int *version, int *subversion);

int (*MUK_Finalize)(void);
int (*MUK_Finalized)(int *flag);

int (*MUK_Init_thread)(int *argc, char ***argv, int required, int *provided);
int (*MUK_Is_thread_main)(int *flag);
int (*MUK_Query_thread)(int *provided);

int (*MUK_Comm_rank)(MPI_Comm comm, int *rank);
int (*MUK_Comm_size)(MPI_Comm comm, int *size);
int (*MUK_Abort)(MPI_Comm comm, int errorcode);

int (*MUK_Accumulate)(const void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win);
int (*MUK_Accumulate_c)(const void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win);
int (*MUK_Add_error_class)(int *errorclass);
int (*MUK_Add_error_code)(int errorclass, int *errorcode);
int (*MUK_Add_error_string)(int errorcode, const char *string);
int (*MUK_Address)(void *location, MPI_Aint *address);
int (*MUK_Allgather)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Allgather_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Allgather_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Allgather_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Allgatherv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Allgatherv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Allgatherv_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Allgatherv_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alloc_mem)(MPI_Aint size, MPI_Info info, void *baseptr);
int (*MUK_Allreduce)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Allreduce_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Allreduce_init)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Allreduce_init_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alltoall)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Alltoall_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Alltoall_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alltoall_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alltoallv)(const void *sendbuf, const int sendcounts[], const int sdispls[], MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int rdispls[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Alltoallv_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Alltoallv_init)(const void *sendbuf, const int sendcounts[], const int sdispls[], MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alltoallv_init_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alltoallw)(const void *sendbuf, const int sendcounts[], const int sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const int recvcounts[], const int rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm);
int (*MUK_Alltoallw_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm);
int (*MUK_Alltoallw_init)(const void *sendbuf, const int sendcounts[], const int sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const int recvcounts[], const int rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Alltoallw_init_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Attr_delete)(MPI_Comm comm, int keyval);
int (*MUK_Attr_get)(MPI_Comm comm, int keyval, void *attribute_val, int *flag);
int (*MUK_Attr_put)(MPI_Comm comm, int keyval, void *attribute_val);
int (*MUK_Barrier)(MPI_Comm comm);
int (*MUK_Barrier_init)(MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Bcast)(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm);
int (*MUK_Bcast_c)(void *buffer, MPI_Count count, MPI_Datatype datatype, int root, MPI_Comm comm);
int (*MUK_Bcast_init)(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Bcast_init_c)(void *buffer, MPI_Count count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Bsend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Bsend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Bsend_init)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Bsend_init_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Buffer_attach)(void *buffer, int size);
int (*MUK_Buffer_attach_c)(void *buffer, MPI_Count size);
int (*MUK_Buffer_detach)(void *buffer_addr, int *size);
int (*MUK_Buffer_detach_c)(void *buffer_addr, MPI_Count *size);
int (*MUK_Cancel)(MPI_Request *request);
int (*MUK_Cart_coords)(MPI_Comm comm, int rank, int maxdims, int coords[]);
int (*MUK_Cart_create)(MPI_Comm comm_old, int ndims, const int dims[], const int periods[], int reorder, MPI_Comm *comm_cart);
int (*MUK_Cart_get)(MPI_Comm comm, int maxdims, int dims[], int periods[], int coords[]);
int (*MUK_Cart_map)(MPI_Comm comm, int ndims, const int dims[], const int periods[], int *newrank);
int (*MUK_Cart_rank)(MPI_Comm comm, const int coords[], int *rank);
int (*MUK_Cart_shift)(MPI_Comm comm, int direction, int disp, int *rank_source, int *rank_dest);
int (*MUK_Cart_sub)(MPI_Comm comm, const int remain_dims[], MPI_Comm *newcomm);
int (*MUK_Cartdim_get)(MPI_Comm comm, int *ndims);
int (*MUK_Close_port)(const char *port_name);
int (*MUK_Comm_accept)(const char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm);
int (*MUK_Comm_call_errhandler)(MPI_Comm comm, int errorcode);
int (*MUK_Comm_compare)(MPI_Comm comm1, MPI_Comm comm2, int *result);
int (*MUK_Comm_connect)(const char *port_name, MPI_Info info, int root, MPI_Comm comm, MPI_Comm *newcomm);
int (*MUK_Comm_create)(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm);
int (*MUK_Comm_create_errhandler)(MPI_Comm_errhandler_function *comm_errhandler_fn, MPI_Errhandler *errhandler);
int (*MUK_Comm_create_from_group)(MPI_Group group, const char *stringtag, MPI_Info info, MPI_Errhandler errhandler, MPI_Comm *newcomm);
int (*MUK_Comm_create_group)(MPI_Comm comm, MPI_Group group, int tag, MPI_Comm *newcomm);
int (*MUK_Comm_create_keyval)(MPI_Comm_copy_attr_function *comm_copy_attr_fn, MPI_Comm_delete_attr_function *comm_delete_attr_fn, int *comm_keyval, void *extra_state);
int (*MUK_Comm_delete_attr)(MPI_Comm comm, int comm_keyval);
int (*MUK_Comm_disconnect)(MPI_Comm *comm);
int (*MUK_Comm_dup)(MPI_Comm comm, MPI_Comm *newcomm);
int (*MUK_Comm_dup_with_info)(MPI_Comm comm, MPI_Info info, MPI_Comm *newcomm);
int (*MUK_Comm_free)(MPI_Comm *comm);
int (*MUK_Comm_free_keyval)(int *comm_keyval);
int (*MUK_Comm_get_attr)(MPI_Comm comm, int comm_keyval, void *attribute_val, int *flag);
int (*MUK_Comm_get_errhandler)(MPI_Comm comm, MPI_Errhandler *errhandler);
int (*MUK_Comm_get_info)(MPI_Comm comm, MPI_Info *info_used);
int (*MUK_Comm_get_name)(MPI_Comm comm, char *comm_name, int *resultlen);
int (*MUK_Comm_get_parent)(MPI_Comm *parent);
int (*MUK_Comm_group)(MPI_Comm comm, MPI_Group *group);
int (*MUK_Comm_idup)(MPI_Comm comm, MPI_Comm *newcomm, MPI_Request *request);
int (*MUK_Comm_idup_with_info)(MPI_Comm comm, MPI_Info info, MPI_Comm *newcomm, MPI_Request *request);
int (*MUK_Comm_join)(int fd, MPI_Comm *intercomm);
int (*MUK_Comm_rank)(MPI_Comm comm, int *rank);
int (*MUK_Comm_remote_group)(MPI_Comm comm, MPI_Group *group);
int (*MUK_Comm_remote_size)(MPI_Comm comm, int *size);
int (*MUK_Comm_set_attr)(MPI_Comm comm, int comm_keyval, void *attribute_val);
int (*MUK_Comm_set_errhandler)(MPI_Comm comm, MPI_Errhandler errhandler);
int (*MUK_Comm_set_info)(MPI_Comm comm, MPI_Info info);
int (*MUK_Comm_set_name)(MPI_Comm comm, const char *comm_name);
int (*MUK_Comm_size)(MPI_Comm comm, int *size);
int (*MUK_Comm_split)(MPI_Comm comm, int color, int key, MPI_Comm *newcomm);
int (*MUK_Comm_split_type)(MPI_Comm comm, int split_type, int key, MPI_Info info, MPI_Comm *newcomm);
int (*MUK_Comm_test_inter)(MPI_Comm comm, int *flag);
int (*MUK_Compare_and_swap)(const void *origin_addr, const void *compare_addr, void *result_addr, MPI_Datatype datatype, int target_rank, MPI_Aint target_disp, MPI_Win win);
int (*MUK_Dims_create)(int nnodes, int ndims, int dims[]);
int (*MUK_Dist_graph_create)(MPI_Comm comm_old, int n, const int sources[], const int degrees[], const int destinations[], const int weights[], MPI_Info info, int reorder, MPI_Comm *comm_dist_graph);
int (*MUK_Dist_graph_create_adjacent)(MPI_Comm comm_old, int indegree, const int sources[], const int sourceweights[], int outdegree, const int destinations[], const int destweights[], MPI_Info info, int reorder, MPI_Comm *comm_dist_graph);
int (*MUK_Dist_graph_neighbors)(MPI_Comm comm, int maxindegree, int sources[], int sourceweights[], int maxoutdegree, int destinations[], int destweights[]);
int (*MUK_Dist_graph_neighbors_count)(MPI_Comm comm, int *indegree, int *outdegree, int *weighted);
int (*MUK_Errhandler_create)(MPI_Comm_errhandler_function *comm_errhandler_fn, MPI_Errhandler *errhandler);
int (*MUK_Errhandler_free)(MPI_Errhandler *errhandler);
int (*MUK_Errhandler_get)(MPI_Comm comm, MPI_Errhandler *errhandler);
int (*MUK_Errhandler_set)(MPI_Comm comm, MPI_Errhandler errhandler);
int (*MUK_Error_class)(int errorcode, int *errorclass);
int (*MUK_Error_string)(int errorcode, char *string, int *resultlen);
int (*MUK_Exscan)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Exscan_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Exscan_init)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Exscan_init_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Fetch_and_op)(const void *origin_addr, void *result_addr, MPI_Datatype datatype, int target_rank, MPI_Aint target_disp, MPI_Op op, MPI_Win win);
int (*MUK_File_call_errhandler)(MPI_File fh, int errorcode);
int (*MUK_File_close)(MPI_File *fh);
int (*MUK_File_create_errhandler)(MPI_File_errhandler_function *file_errhandler_fn, MPI_Errhandler *errhandler);
int (*MUK_File_delete)(const char *filename, MPI_Info info);
int (*MUK_File_get_amode)(MPI_File fh, int *amode);
int (*MUK_File_get_atomicity)(MPI_File fh, int *flag);
int (*MUK_File_get_byte_offset)(MPI_File fh, MPI_Offset offset, MPI_Offset *disp);
int (*MUK_File_get_errhandler)(MPI_File file, MPI_Errhandler *errhandler);
int (*MUK_File_get_group)(MPI_File fh, MPI_Group *group);
int (*MUK_File_get_info)(MPI_File fh, MPI_Info *info_used);
int (*MUK_File_get_position)(MPI_File fh, MPI_Offset *offset);
int (*MUK_File_get_position_shared)(MPI_File fh, MPI_Offset *offset);
int (*MUK_File_get_size)(MPI_File fh, MPI_Offset *size);
int (*MUK_File_get_type_extent)(MPI_File fh, MPI_Datatype datatype, MPI_Aint *extent);
int (*MUK_File_get_type_extent_c)(MPI_File fh, MPI_Datatype datatype, MPI_Count *extent);
int (*MUK_File_get_view)(MPI_File fh, MPI_Offset *disp, MPI_Datatype *etype, MPI_Datatype *filetype, char *datarep);
int (*MUK_File_iread)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_all)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_all_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_at)(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_at_all)(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_at_all_c)(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_at_c)(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_shared)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iread_shared_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_all)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_all_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_at)(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_at_all)(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_at_all_c)(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_at_c)(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_shared)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_iwrite_shared_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Request *request);
int (*MUK_File_open)(MPI_Comm comm, const char *filename, int amode, MPI_Info info, MPI_File *fh);
int (*MUK_File_preallocate)(MPI_File fh, MPI_Offset size);
int (*MUK_File_read)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_all)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_all_begin)(MPI_File fh, void *buf, int count, MPI_Datatype datatype);
int (*MUK_File_read_all_begin_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype);
int (*MUK_File_read_all_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_all_end)(MPI_File fh, void *buf, MPI_Status *status);
int (*MUK_File_read_at)(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_at_all)(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_at_all_begin)(MPI_File fh, MPI_Offset offset, void *buf, int count, MPI_Datatype datatype);
int (*MUK_File_read_at_all_begin_c)(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype);
int (*MUK_File_read_at_all_c)(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_at_all_end)(MPI_File fh, void *buf, MPI_Status *status);
int (*MUK_File_read_at_c)(MPI_File fh, MPI_Offset offset, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_ordered)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_ordered_begin)(MPI_File fh, void *buf, int count, MPI_Datatype datatype);
int (*MUK_File_read_ordered_begin_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype);
int (*MUK_File_read_ordered_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_ordered_end)(MPI_File fh, void *buf, MPI_Status *status);
int (*MUK_File_read_shared)(MPI_File fh, void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_read_shared_c)(MPI_File fh, void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_seek)(MPI_File fh, MPI_Offset offset, int whence);
int (*MUK_File_seek_shared)(MPI_File fh, MPI_Offset offset, int whence);
int (*MUK_File_set_atomicity)(MPI_File fh, int flag);
int (*MUK_File_set_errhandler)(MPI_File file, MPI_Errhandler errhandler);
int (*MUK_File_set_info)(MPI_File fh, MPI_Info info);
int (*MUK_File_set_size)(MPI_File fh, MPI_Offset size);
int (*MUK_File_set_view)(MPI_File fh, MPI_Offset disp, MPI_Datatype etype, MPI_Datatype filetype, const char *datarep, MPI_Info info);
int (*MUK_File_sync)(MPI_File fh);
int (*MUK_File_write)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_all)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_all_begin)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype);
int (*MUK_File_write_all_begin_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype);
int (*MUK_File_write_all_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_all_end)(MPI_File fh, const void *buf, MPI_Status *status);
int (*MUK_File_write_at)(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_at_all)(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_at_all_begin)(MPI_File fh, MPI_Offset offset, const void *buf, int count, MPI_Datatype datatype);
int (*MUK_File_write_at_all_begin_c)(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype);
int (*MUK_File_write_at_all_c)(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_at_all_end)(MPI_File fh, const void *buf, MPI_Status *status);
int (*MUK_File_write_at_c)(MPI_File fh, MPI_Offset offset, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_ordered)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_ordered_begin)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype);
int (*MUK_File_write_ordered_begin_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype);
int (*MUK_File_write_ordered_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_ordered_end)(MPI_File fh, const void *buf, MPI_Status *status);
int (*MUK_File_write_shared)(MPI_File fh, const void *buf, int count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_File_write_shared_c)(MPI_File fh, const void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Status *status);
int (*MUK_Free_mem)(void *base);
int (*MUK_Gather)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Gather_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Gather_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Gather_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Gatherv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Gatherv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Gatherv_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Gatherv_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Get)(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win);
int (*MUK_Get_accumulate)(const void *origin_addr, int origin_count, MPI_Datatype origin_datatype, void *result_addr, int result_count, MPI_Datatype result_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win);
int (*MUK_Get_accumulate_c)(const void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, void *result_addr, MPI_Count result_count, MPI_Datatype result_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win);
int (*MUK_Get_address)(const void *location, MPI_Aint *address);
int (*MUK_Get_c)(void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Win win);
int (*MUK_Get_count)(const MPI_Status *status, MPI_Datatype datatype, int *count);
int (*MUK_Get_count_c)(const MPI_Status *status, MPI_Datatype datatype, MPI_Count *count);
int (*MUK_Get_elements)(const MPI_Status *status, MPI_Datatype datatype, int *count);
int (*MUK_Get_elements_c)(const MPI_Status *status, MPI_Datatype datatype, MPI_Count *count);
int (*MUK_Get_elements_x)(const MPI_Status *status, MPI_Datatype datatype, MPI_Count *count);
int (*MUK_Graph_create)(MPI_Comm comm_old, int nnodes, const int indx[], const int edges[], int reorder, MPI_Comm *comm_graph);
int (*MUK_Graph_get)(MPI_Comm comm, int maxindex, int maxedges, int indx[], int edges[]);
int (*MUK_Graph_map)(MPI_Comm comm, int nnodes, const int indx[], const int edges[], int *newrank);
int (*MUK_Graph_neighbors)(MPI_Comm comm, int rank, int maxneighbors, int neighbors[]);
int (*MUK_Graph_neighbors_count)(MPI_Comm comm, int rank, int *nneighbors);
int (*MUK_Graphdims_get)(MPI_Comm comm, int *nnodes, int *nedges);
int (*MUK_Grequest_complete)(MPI_Request request);
int (*MUK_Grequest_start)(MPI_Grequest_query_function *query_fn, MPI_Grequest_free_function *free_fn, MPI_Grequest_cancel_function *cancel_fn, void *extra_state, MPI_Request *request);
int (*MUK_Group_compare)(MPI_Group group1, MPI_Group group2, int *result);
int (*MUK_Group_difference)(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup);
int (*MUK_Group_excl)(MPI_Group group, int n, const int ranks[], MPI_Group *newgroup);
int (*MUK_Group_free)(MPI_Group *group);
int (*MUK_Group_from_session_pset)(MPI_Session session, const char *pset_name, MPI_Group *newgroup);
int (*MUK_Group_incl)(MPI_Group group, int n, const int ranks[], MPI_Group *newgroup);
int (*MUK_Group_intersection)(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup);
int (*MUK_Group_range_excl)(MPI_Group group, int n, int ranges[][3], MPI_Group *newgroup);
int (*MUK_Group_range_incl)(MPI_Group group, int n, int ranges[][3], MPI_Group *newgroup);
int (*MUK_Group_rank)(MPI_Group group, int *rank);
int (*MUK_Group_size)(MPI_Group group, int *size);
int (*MUK_Group_translate_ranks)(MPI_Group group1, int n, const int ranks1[], MPI_Group group2, int ranks2[]);
int (*MUK_Group_union)(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup);
int (*MUK_Iallgather)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iallgather_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iallgatherv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iallgatherv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iallreduce)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iallreduce_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ialltoall)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ialltoall_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ialltoallv)(const void *sendbuf, const int sendcounts[], const int sdispls[], MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ialltoallv_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ialltoallw)(const void *sendbuf, const int sendcounts[], const int sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const int recvcounts[], const int rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Request *request);
int (*MUK_Ialltoallw_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Request *request);
int (*MUK_Ibarrier)(MPI_Comm comm, MPI_Request *request);
int (*MUK_Ibcast)(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ibcast_c)(void *buffer, MPI_Count count, MPI_Datatype datatype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ibsend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ibsend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iexscan)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iexscan_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Igather)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Igather_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Igatherv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Igatherv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Improbe)(int source, int tag, MPI_Comm comm, int *flag, MPI_Message *message, MPI_Status *status);
int (*MUK_Imrecv)(void *buf, int count, MPI_Datatype datatype, MPI_Message *message, MPI_Request *request);
int (*MUK_Imrecv_c)(void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Message *message, MPI_Request *request);
int (*MUK_Ineighbor_allgather)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_allgather_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_allgatherv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_allgatherv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_alltoall)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_alltoall_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_alltoallv)(const void *sendbuf, const int sendcounts[], const int sdispls[], MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_alltoallv_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_alltoallw)(const void *sendbuf, const int sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const int recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Request *request);
int (*MUK_Ineighbor_alltoallw_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Request *request);
int (*MUK_Info_create)(MPI_Info *info);
int (*MUK_Info_create_env)(int argc, char *argv[], MPI_Info *info);
int (*MUK_Info_delete)(MPI_Info info, const char *key);
int (*MUK_Info_dup)(MPI_Info info, MPI_Info *newinfo);
int (*MUK_Info_free)(MPI_Info *info);
int (*MUK_Info_get)(MPI_Info info, const char *key, int valuelen, char *value, int *flag);
int (*MUK_Info_get_nkeys)(MPI_Info info, int *nkeys);
int (*MUK_Info_get_nthkey)(MPI_Info info, int n, char *key);
int (*MUK_Info_get_string)(MPI_Info info, const char *key, int *buflen, char *value, int *flag);
int (*MUK_Info_get_valuelen)(MPI_Info info, const char *key, int *valuelen, int *flag);
int (*MUK_Info_set)(MPI_Info info, const char *key, const char *value);
int (*MUK_Intercomm_create)(MPI_Comm local_comm, int local_leader, MPI_Comm peer_comm, int remote_leader, int tag, MPI_Comm *newintercomm);
int (*MUK_Intercomm_create_from_groups)(MPI_Group local_group, int local_leader, MPI_Group remote_group, int remote_leader, const char *stringtag, MPI_Info info, MPI_Errhandler errhandler, MPI_Comm *newintercomm);
int (*MUK_Intercomm_merge)(MPI_Comm intercomm, int high, MPI_Comm *newintracomm);
int (*MUK_Iprobe)(int source, int tag, MPI_Comm comm, int *flag, MPI_Status *status);
int (*MUK_Irecv)(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Irecv_c)(void *buf, MPI_Count count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ireduce)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ireduce_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ireduce_scatter)(const void *sendbuf, void *recvbuf, const int recvcounts[], MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ireduce_scatter_block)(const void *sendbuf, void *recvbuf, int recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ireduce_scatter_block_c)(const void *sendbuf, void *recvbuf, MPI_Count recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ireduce_scatter_c)(const void *sendbuf, void *recvbuf, const MPI_Count recvcounts[], MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Irsend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Irsend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iscan)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iscan_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iscatter)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iscatter_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iscatterv)(const void *sendbuf, const int sendcounts[], const int displs[], MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Iscatterv_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint displs[], MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Request *request);
int (*MUK_Isend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Isend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Isendrecv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Isendrecv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Isendrecv_replace)(void *buf, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Isendrecv_replace_c)(void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Issend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Issend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
// deprecated
//int (*MUK_Keyval_create)(MUK_Copy_function *copy_fn, MUK_Delete_function *delete_fn, int *keyval, void *extra_state);
//int (*MUK_Keyval_free)(int *keyval);
int (*MUK_Lookup_name)(const char *service_name, MPI_Info info, char *port_name);
int (*MUK_Mprobe)(int source, int tag, MPI_Comm comm, MPI_Message *message, MPI_Status *status);
int (*MUK_Mrecv)(void *buf, int count, MPI_Datatype datatype, MPI_Message *message, MPI_Status *status);
int (*MUK_Mrecv_c)(void *buf, MPI_Count count, MPI_Datatype datatype, MPI_Message *message, MPI_Status *status);
int (*MUK_Neighbor_allgather)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_allgather_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_allgather_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_allgather_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_allgatherv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_allgatherv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_allgatherv_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_allgatherv_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint displs[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_alltoall)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_alltoall_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_alltoall_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_alltoall_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_alltoallv)(const void *sendbuf, const int sendcounts[], const int sdispls[], MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int rdispls[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_alltoallv_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], MPI_Datatype recvtype, MPI_Comm comm);
int (*MUK_Neighbor_alltoallv_init)(const void *sendbuf, const int sendcounts[], const int sdispls[], MPI_Datatype sendtype, void *recvbuf, const int recvcounts[], const int rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_alltoallv_init_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], MPI_Datatype sendtype, void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], MPI_Datatype recvtype, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_alltoallw)(const void *sendbuf, const int sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const int recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm);
int (*MUK_Neighbor_alltoallw_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm);
int (*MUK_Neighbor_alltoallw_init)(const void *sendbuf, const int sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const int recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Neighbor_alltoallw_init_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint sdispls[], const MPI_Datatype sendtypes[], void *recvbuf, const MPI_Count recvcounts[], const MPI_Aint rdispls[], const MPI_Datatype recvtypes[], MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Op_commutative)(MPI_Op op, int *commute);
int (*MUK_Op_create)(MPI_User_function *user_fn, int commute, MPI_Op *op);
int (*MUK_Op_create_c)(MPI_User_function_c *user_fn, int commute, MPI_Op *op);
int (*MUK_Op_free)(MPI_Op *op);
int (*MUK_Open_port)(MPI_Info info, char *port_name);
int (*MUK_Pack)(const void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, int outsize, int *position, MPI_Comm comm);
int (*MUK_Pack_c)(const void *inbuf, MPI_Count incount, MPI_Datatype datatype, void *outbuf, MPI_Count outsize, MPI_Count *position, MPI_Comm comm);
int (*MUK_Pack_external)(const char *datarep, const void *inbuf, int incount, MPI_Datatype datatype, void *outbuf, MPI_Aint outsize, MPI_Aint *position);
int (*MUK_Pack_external_c)(const char *datarep, const void *inbuf, MPI_Count incount, MPI_Datatype datatype, void *outbuf, MPI_Count outsize, MPI_Count *position);
int (*MUK_Pack_external_size)(const char *datarep, int incount, MPI_Datatype datatype, MPI_Aint *size);
int (*MUK_Pack_external_size_c)(const char *datarep, MPI_Count incount, MPI_Datatype datatype, MPI_Count *size);
int (*MUK_Pack_size)(int incount, MPI_Datatype datatype, MPI_Comm comm, int *size);
int (*MUK_Pack_size_c)(MPI_Count incount, MPI_Datatype datatype, MPI_Comm comm, MPI_Count *size);
int (*MUK_Parrived)(MPI_Request request, int partition, int *flag);
int (*MUK_Pcontrol)(const int level, ...);
int (*MUK_Pready)(int partition, MPI_Request request);
int (*MUK_Pready_list)(int length, const int array_of_partitions[], MPI_Request request);
int (*MUK_Pready_range)(int partition_low, int partition_high, MPI_Request request);
int (*MUK_Precv_init)(void *buf, int partitions, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Probe)(int source, int tag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Psend_init)(const void *buf, int partitions, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Publish_name)(const char *service_name, MPI_Info info, const char *port_name);
int (*MUK_Put)(const void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win);
int (*MUK_Put_c)(const void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Win win);
int (*MUK_Raccumulate)(const void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win, MPI_Request *request);
int (*MUK_Raccumulate_c)(const void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win, MPI_Request *request);
int (*MUK_Recv)(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Recv_c)(void *buf, MPI_Count count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Recv_init)(void *buf, int count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Recv_init_c)(void *buf, MPI_Count count, MPI_Datatype datatype, int source, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Reduce)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm);
int (*MUK_Reduce_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm);
int (*MUK_Reduce_init)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Reduce_init_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Reduce_local)(const void *inbuf, void *inoutbuf, int count, MPI_Datatype datatype, MPI_Op op);
int (*MUK_Reduce_local_c)(const void *inbuf, void *inoutbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op);
int (*MUK_Reduce_scatter)(const void *sendbuf, void *recvbuf, const int recvcounts[], MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Reduce_scatter_block)(const void *sendbuf, void *recvbuf, int recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Reduce_scatter_block_c)(const void *sendbuf, void *recvbuf, MPI_Count recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Reduce_scatter_block_init)(const void *sendbuf, void *recvbuf, int recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Reduce_scatter_block_init_c)(const void *sendbuf, void *recvbuf, MPI_Count recvcount, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Reduce_scatter_c)(const void *sendbuf, void *recvbuf, const MPI_Count recvcounts[], MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Reduce_scatter_init)(const void *sendbuf, void *recvbuf, const int recvcounts[], MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Reduce_scatter_init_c)(const void *sendbuf, void *recvbuf, const MPI_Count recvcounts[], MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Register_datarep)(const char *datarep, MPI_Datarep_conversion_function *read_conversion_fn, MPI_Datarep_conversion_function *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state);
int (*MUK_Register_datarep_c)(const char *datarep, MPI_Datarep_conversion_function_c *read_conversion_fn, MPI_Datarep_conversion_function_c *write_conversion_fn, MPI_Datarep_extent_function *dtype_file_extent_fn, void *extra_state);
int (*MUK_Request_free)(MPI_Request *request);
int (*MUK_Request_get_status)(MPI_Request request, int *flag, MPI_Status *status);
int (*MUK_Rget)(void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win, MPI_Request *request);
int (*MUK_Rget_accumulate)(const void *origin_addr, int origin_count, MPI_Datatype origin_datatype, void *result_addr, int result_count, MPI_Datatype result_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win, MPI_Request *request);
int (*MUK_Rget_accumulate_c)(const void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, void *result_addr, MPI_Count result_count, MPI_Datatype result_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Op op, MPI_Win win, MPI_Request *request);
int (*MUK_Rget_c)(void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Win win, MPI_Request *request);
int (*MUK_Rput)(const void *origin_addr, int origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, int target_count, MPI_Datatype target_datatype, MPI_Win win, MPI_Request *request);
int (*MUK_Rput_c)(const void *origin_addr, MPI_Count origin_count, MPI_Datatype origin_datatype, int target_rank, MPI_Aint target_disp, MPI_Count target_count, MPI_Datatype target_datatype, MPI_Win win, MPI_Request *request);
int (*MUK_Rsend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Rsend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Rsend_init)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Rsend_init_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Scan)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Scan_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm);
int (*MUK_Scan_init)(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Scan_init_c)(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Scatter)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Scatter_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Scatter_init)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Scatter_init_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Scatterv)(const void *sendbuf, const int sendcounts[], const int displs[], MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Scatterv_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint displs[], MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm);
int (*MUK_Scatterv_init)(const void *sendbuf, const int sendcounts[], const int displs[], MPI_Datatype sendtype, void *recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Scatterv_init_c)(const void *sendbuf, const MPI_Count sendcounts[], const MPI_Aint displs[], MPI_Datatype sendtype, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm, MPI_Info info, MPI_Request *request);
int (*MUK_Send)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Send_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Send_init)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Send_init_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Sendrecv)(const void *sendbuf, int sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, int recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Sendrecv_c)(const void *sendbuf, MPI_Count sendcount, MPI_Datatype sendtype, int dest, int sendtag, void *recvbuf, MPI_Count recvcount, MPI_Datatype recvtype, int source, int recvtag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Sendrecv_replace)(void *buf, int count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Sendrecv_replace_c)(void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int sendtag, int source, int recvtag, MPI_Comm comm, MPI_Status *status);
int (*MUK_Session_call_errhandler)(MPI_Session session, int errorcode);
int (*MUK_Session_create_errhandler)(MPI_Session_errhandler_function *session_errhandler_fn, MPI_Errhandler *errhandler);
int (*MUK_Session_finalize)(MPI_Session *session);
int (*MUK_Session_get_errhandler)(MPI_Session session, MPI_Errhandler *errhandler);
int (*MUK_Session_get_info)(MPI_Session session, MPI_Info *info_used);
int (*MUK_Session_get_nth_pset)(MPI_Session session, MPI_Info info, int n, int *pset_len, char *pset_name);
int (*MUK_Session_get_num_psets)(MPI_Session session, MPI_Info info, int *npset_names);
int (*MUK_Session_get_pset_info)(MPI_Session session, const char *pset_name, MPI_Info *info);
int (*MUK_Session_init)(MPI_Info info, MPI_Errhandler errhandler, MPI_Session *session);
int (*MUK_Session_set_errhandler)(MPI_Session session, MPI_Errhandler errhandler);
int (*MUK_Ssend)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Ssend_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm);
int (*MUK_Ssend_init)(const void *buf, int count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Ssend_init_c)(const void *buf, MPI_Count count, MPI_Datatype datatype, int dest, int tag, MPI_Comm comm, MPI_Request *request);
int (*MUK_Start)(MPI_Request *request);
int (*MUK_Startall)(int count, MPI_Request array_of_requests[]);
#ifdef SUPPORT_F08
int (*MUK_Status_f082c)(const MPI_F08_status *f08_status, MPI_Status *c_status);
int (*MUK_Status_f082f)(const MPI_F08_status *f08_status, MPI_Fint *f_status);
int (*MUK_Status_f2f08)(const MPI_Fint *f_status, MPI_F08_status *f08_status);
#endif
int (*MUK_Status_set_cancelled)(MPI_Status *status, int flag);
int (*MUK_Status_set_elements)(MPI_Status *status, MPI_Datatype datatype, int count);
int (*MUK_Status_set_elements_c)(MPI_Status *status, MPI_Datatype datatype, MPI_Count count);
int (*MUK_Status_set_elements_x)(MPI_Status *status, MPI_Datatype datatype, MPI_Count count);
int (*MUK_Test)(MPI_Request *request, int *flag, MPI_Status *status);
int (*MUK_Test_cancelled)(const MPI_Status *status, int *flag);
int (*MUK_Testall)(int count, MPI_Request array_of_requests[], int *flag, MPI_Status array_of_statuses[]);
int (*MUK_Testany)(int count, MPI_Request array_of_requests[], int *indx, int *flag, MPI_Status *status);
int (*MUK_Testsome)(int incount, MPI_Request array_of_requests[], int *outcount, int array_of_indices[], MPI_Status array_of_statuses[]);
int (*MUK_Topo_test)(MPI_Comm comm, int *status);
int (*MUK_Type_commit)(MPI_Datatype *datatype);
int (*MUK_Type_contiguous)(int count, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_contiguous_c)(MPI_Count count, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_darray)(int size, int rank, int ndims, const int array_of_gsizes[], const int array_of_distribs[], const int array_of_dargs[], const int array_of_psizes[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_darray_c)(int size, int rank, int ndims, const MPI_Count array_of_gsizes[], const int array_of_distribs[], const int array_of_dargs[], const int array_of_psizes[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_f90_complex)(int p, int r, MPI_Datatype *newtype);
int (*MUK_Type_create_f90_integer)(int r, MPI_Datatype *newtype);
int (*MUK_Type_create_f90_real)(int p, int r, MPI_Datatype *newtype);
int (*MUK_Type_create_hindexed)(int count, const int array_of_blocklengths[], const MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_hindexed_block)(int count, int blocklength, const MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_hindexed_block_c)(MPI_Count count, MPI_Count blocklength, const MPI_Count array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_hindexed_c)(MPI_Count count, const MPI_Count array_of_blocklengths[], const MPI_Count array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_hvector)(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_hvector_c)(MPI_Count count, MPI_Count blocklength, MPI_Count stride, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_indexed_block)(int count, int blocklength, const int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_indexed_block_c)(MPI_Count count, MPI_Count blocklength, const MPI_Count array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_keyval)(MPI_Type_copy_attr_function *type_copy_attr_fn, MPI_Type_delete_attr_function *type_delete_attr_fn, int *type_keyval, void *extra_state);
int (*MUK_Type_create_resized)(MPI_Datatype oldtype, MPI_Aint lb, MPI_Aint extent, MPI_Datatype *newtype);
int (*MUK_Type_create_resized_c)(MPI_Datatype oldtype, MPI_Count lb, MPI_Count extent, MPI_Datatype *newtype);
int (*MUK_Type_create_struct)(int count, const int array_of_blocklengths[], const MPI_Aint array_of_displacements[], const MPI_Datatype array_of_types[], MPI_Datatype *newtype);
int (*MUK_Type_create_struct_c)(MPI_Count count, const MPI_Count array_of_blocklengths[], const MPI_Count array_of_displacements[], const MPI_Datatype array_of_types[], MPI_Datatype *newtype);
int (*MUK_Type_create_subarray)(int ndims, const int array_of_sizes[], const int array_of_subsizes[], const int array_of_starts[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_create_subarray_c)(int ndims, const MPI_Count array_of_sizes[], const MPI_Count array_of_subsizes[], const MPI_Count array_of_starts[], int order, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_delete_attr)(MPI_Datatype datatype, int type_keyval);
int (*MUK_Type_dup)(MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_extent)(MPI_Datatype datatype, MPI_Aint *extent);
int (*MUK_Type_free)(MPI_Datatype *datatype);
int (*MUK_Type_free_keyval)(int *type_keyval);
int (*MUK_Type_get_attr)(MPI_Datatype datatype, int type_keyval, void *attribute_val, int *flag);
int (*MUK_Type_get_contents)(MPI_Datatype datatype, int max_integers, int max_addresses, int max_datatypes, int array_of_integers[], MPI_Aint array_of_addresses[], MPI_Datatype array_of_datatypes[]);
int (*MUK_Type_get_contents_c)(MPI_Datatype datatype, MPI_Count max_integers, MPI_Count max_addresses, MPI_Count max_large_counts, MPI_Count max_datatypes, int array_of_integers[], MPI_Aint array_of_addresses[], MPI_Count array_of_large_counts[], MPI_Datatype array_of_datatypes[]);
int (*MUK_Type_get_envelope)(MPI_Datatype datatype, int *num_integers, int *num_addresses, int *num_datatypes, int *combiner);
int (*MUK_Type_get_envelope_c)(MPI_Datatype datatype, MPI_Count *num_integers, MPI_Count *num_addresses, MPI_Count *num_large_counts, MPI_Count *num_datatypes, int *combiner);
int (*MUK_Type_get_extent)(MPI_Datatype datatype, MPI_Aint *lb, MPI_Aint *extent);
int (*MUK_Type_get_extent_c)(MPI_Datatype datatype, MPI_Count *lb, MPI_Count *extent);
int (*MUK_Type_get_extent_x)(MPI_Datatype datatype, MPI_Count *lb, MPI_Count *extent);
int (*MUK_Type_get_name)(MPI_Datatype datatype, char *type_name, int *resultlen);
int (*MUK_Type_get_true_extent)(MPI_Datatype datatype, MPI_Aint *true_lb, MPI_Aint *true_extent);
int (*MUK_Type_get_true_extent_c)(MPI_Datatype datatype, MPI_Count *true_lb, MPI_Count *true_extent);
int (*MUK_Type_get_true_extent_x)(MPI_Datatype datatype, MPI_Count *true_lb, MPI_Count *true_extent);
int (*MUK_Type_hindexed)(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_hvector)(int count, int blocklength, MPI_Aint stride, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_indexed)(int count, const int array_of_blocklengths[], const int array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_indexed_c)(MPI_Count count, const MPI_Count array_of_blocklengths[], const MPI_Count array_of_displacements[], MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_lb)(MPI_Datatype datatype, MPI_Aint *displacement);
int (*MUK_Type_match_size)(int typeclass, int size, MPI_Datatype *datatype);
int (*MUK_Type_set_attr)(MPI_Datatype datatype, int type_keyval, void *attribute_val);
int (*MUK_Type_set_name)(MPI_Datatype datatype, const char *type_name);
int (*MUK_Type_size)(MPI_Datatype datatype, int *size);
int (*MUK_Type_size_c)(MPI_Datatype datatype, MPI_Count *size);
int (*MUK_Type_size_x)(MPI_Datatype datatype, MPI_Count *size);
int (*MUK_Type_struct)(int count, int array_of_blocklengths[], MPI_Aint array_of_displacements[], MPI_Datatype array_of_types[], MPI_Datatype *newtype);
int (*MUK_Type_ub)(MPI_Datatype datatype, MPI_Aint *displacement);
int (*MUK_Type_vector)(int count, int blocklength, int stride, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Type_vector_c)(MPI_Count count, MPI_Count blocklength, MPI_Count stride, MPI_Datatype oldtype, MPI_Datatype *newtype);
int (*MUK_Unpack)(const void *inbuf, int insize, int *position, void *outbuf, int outcount, MPI_Datatype datatype, MPI_Comm comm);
int (*MUK_Unpack_c)(const void *inbuf, MPI_Count insize, MPI_Count *position, void *outbuf, MPI_Count outcount, MPI_Datatype datatype, MPI_Comm comm);
int (*MUK_Unpack_external)(const char datarep[], const void *inbuf, MPI_Aint insize, MPI_Aint *position, void *outbuf, int outcount, MPI_Datatype datatype);
int (*MUK_Unpack_external_c)(const char datarep[], const void *inbuf, MPI_Count insize, MPI_Count *position, void *outbuf, MPI_Count outcount, MPI_Datatype datatype);
int (*MUK_Unpublish_name)(const char *service_name, MPI_Info info, const char *port_name);
int (*MUK_Wait)(MPI_Request *request, MPI_Status *status);
int (*MUK_Waitall)(int count, MPI_Request array_of_requests[], MPI_Status array_of_statuses[]);
int (*MUK_Waitany)(int count, MPI_Request array_of_requests[], int *indx, MPI_Status *status);
int (*MUK_Waitsome)(int incount, MPI_Request array_of_requests[], int *outcount, int array_of_indices[], MPI_Status array_of_statuses[]);
int (*MUK_Win_allocate)(MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, void *baseptr, MPI_Win *win);
int (*MUK_Win_allocate_c)(MPI_Aint size, MPI_Aint disp_unit, MPI_Info info, MPI_Comm comm, void *baseptr, MPI_Win *win);
int (*MUK_Win_allocate_shared)(MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, void *baseptr, MPI_Win *win);
int (*MUK_Win_allocate_shared_c)(MPI_Aint size, MPI_Aint disp_unit, MPI_Info info, MPI_Comm comm, void *baseptr, MPI_Win *win);
int (*MUK_Win_attach)(MPI_Win win, void *base, MPI_Aint size);
int (*MUK_Win_call_errhandler)(MPI_Win win, int errorcode);
int (*MUK_Win_complete)(MPI_Win win);
int (*MUK_Win_create)(void *base, MPI_Aint size, int disp_unit, MPI_Info info, MPI_Comm comm, MPI_Win *win);
int (*MUK_Win_create_c)(void *base, MPI_Aint size, MPI_Aint disp_unit, MPI_Info info, MPI_Comm comm, MPI_Win *win);
int (*MUK_Win_create_dynamic)(MPI_Info info, MPI_Comm comm, MPI_Win *win);
int (*MUK_Win_create_errhandler)(MPI_Win_errhandler_function *win_errhandler_fn, MPI_Errhandler *errhandler);
int (*MUK_Win_create_keyval)(MPI_Win_copy_attr_function *win_copy_attr_fn, MPI_Win_delete_attr_function *win_delete_attr_fn, int *win_keyval, void *extra_state);
int (*MUK_Win_delete_attr)(MPI_Win win, int win_keyval);
int (*MUK_Win_detach)(MPI_Win win, const void *base);
int (*MUK_Win_fence)(int assert, MPI_Win win);
int (*MUK_Win_flush)(int rank, MPI_Win win);
int (*MUK_Win_flush_all)(MPI_Win win);
int (*MUK_Win_flush_local)(int rank, MPI_Win win);
int (*MUK_Win_flush_local_all)(MPI_Win win);
int (*MUK_Win_free)(MPI_Win *win);
int (*MUK_Win_free_keyval)(int *win_keyval);
int (*MUK_Win_get_attr)(MPI_Win win, int win_keyval, void *attribute_val, int *flag);
int (*MUK_Win_get_errhandler)(MPI_Win win, MPI_Errhandler *errhandler);
int (*MUK_Win_get_group)(MPI_Win win, MPI_Group *group);
int (*MUK_Win_get_info)(MPI_Win win, MPI_Info *info_used);
int (*MUK_Win_get_name)(MPI_Win win, char *win_name, int *resultlen);
int (*MUK_Win_lock)(int lock_type, int rank, int assert, MPI_Win win);
int (*MUK_Win_lock_all)(int assert, MPI_Win win);
int (*MUK_Win_post)(MPI_Group group, int assert, MPI_Win win);
int (*MUK_Win_set_attr)(MPI_Win win, int win_keyval, void *attribute_val);
int (*MUK_Win_set_errhandler)(MPI_Win win, MPI_Errhandler errhandler);
int (*MUK_Win_set_info)(MPI_Win win, MPI_Info info);
int (*MUK_Win_set_name)(MPI_Win win, const char *win_name);
int (*MUK_Win_shared_query)(MPI_Win win, int rank, MPI_Aint *size, int *disp_unit, void *baseptr);
int (*MUK_Win_shared_query_c)(MPI_Win win, int rank, MPI_Aint *size, MPI_Aint *disp_unit, void *baseptr);
int (*MUK_Win_start)(MPI_Group group, int assert, MPI_Win win);
int (*MUK_Win_sync)(MPI_Win win);
int (*MUK_Win_test)(MPI_Win win, int *flag);
int (*MUK_Win_unlock)(int rank, MPI_Win win);
int (*MUK_Win_unlock_all)(MPI_Win win);
int (*MUK_Win_wait)(MPI_Win win);
